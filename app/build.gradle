apply plugin: 'com.android.application'
apply from: 'tinker-support.gradle'

android {
    compileSdkVersion 27
    defaultConfig {
        applicationId "com.eeseetech.nagrand"
        minSdkVersion 17
        targetSdkVersion 19
        versionCode getVersionCodeTimestamp()
        //versionCode 2018071314
        versionName "1.0.tv"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    signingConfigs {
        release {
            keyAlias 'nagrand'
            keyPassword 'eeseetech'
            storeFile file('nagrand-release-key.keystore')
            storePassword 'eeseetech'
        }
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
            minifyEnabled false
            signingConfig signingConfigs.release
        }
    }

    applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "nagrand_${defaultConfig.versionCode}.apk"
        }
    }

    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }

    flavorDimensions "default"
    productFlavors({
        internal{
            buildConfigField "String","API_TYPE","\"test\""
        }
        product{
            buildConfigField "String","API_TYPE","\"product\""
        }
        develop{
            buildConfigField "String","API_TYPE","\"develop\""
        }
    })
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'com.android.support.constraint:constraint-layout:1.1.2'
    implementation 'com.android.support:recyclerview-v7:27.1.1'
    implementation 'com.squareup.okhttp3:okhttp:3.10.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.5.0'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.2'
    implementation 'io.reactivex.rxjava2:rxjava:2.1.14'
    implementation "com.android.support:multidex:1.0.3"
    implementation 'com.tencent.bugly:crashreport_upgrade:1.3.5'
    implementation 'com.tencent.tinker:tinker-android-lib:1.9.6'
    implementation 'com.tencent.bugly:nativecrashreport:latest.release'
    implementation 'com.google.code.gson:gson:2.8.2'
    implementation 'com.squareup.sqlbrite3:sqlbrite:3.2.0'
    implementation 'com.squareup.retrofit2:retrofit:2.4.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.4.0'
    implementation 'com.google.android.exoplayer:exoplayer:2.8.2'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.4.0'
    implementation 'io.socket:socket.io-client:0.8.3'
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.5.4'
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.4'
    testImplementation 'junit:junit:4.12'
    testImplementation "org.mockito:mockito-core:2.7.22"
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}

def getVersionCodeTimestamp() {
    def date = new Date()
    def formattedDate = date.format('yyyyMMddHH')
    def code = formattedDate.toInteger()
    println sprintf("VersionCode: %d\r\n", code)
    return code
}
